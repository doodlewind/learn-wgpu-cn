(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{543:function(r,t,e){"use strict";e.r(t);var n=e(23),a=Object(n.a)({},(function(){var r=this,t=r.$createElement,e=r._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[r._v("#")]),r._v(" 介绍")]),r._v(" "),e("p",[r._v("Wgpu 是基于 Rust 的 WebGPU 标准实现，本系列文章是其入门教程 "),e("em",[e("a",{attrs:{href:"https://github.com/sotrh/learn-wgpu",target:"_blank",rel:"noopener noreferrer"}},[r._v("Learn Wgpu"),e("OutboundLink")],1)]),r._v(" 的中文版。")]),r._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/doodlewind/learn-wgpu-cn"}},[e("img",{attrs:{alt:"GitHub stars",src:"https://img.shields.io/github/stars/doodlewind/learn-wgpu-cn?style=social"}})])]),r._v(" "),e("h2",{attrs:{id:"翻译状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#翻译状态"}},[r._v("#")]),r._v(" 翻译状态")]),r._v(" "),e("ul",[e("li",[r._v("入门篇\n"),e("ul",[e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial1-window/",target:"_blank",rel:"noopener noreferrer"}},[r._v("依赖与窗口"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial2-surface/",target:"_blank",rel:"noopener noreferrer"}},[r._v("使用 Surface"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial3-pipeline/",target:"_blank",rel:"noopener noreferrer"}},[r._v("使用 Pipeline"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial4-buffer/",target:"_blank",rel:"noopener noreferrer"}},[r._v("顶点缓冲区与索引缓冲区"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial5-textures/",target:"_blank",rel:"noopener noreferrer"}},[r._v("纹理与 BindGroup"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial6-uniforms/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Uniform 缓冲区与 3D 相机"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial7-instancing/",target:"_blank",rel:"noopener noreferrer"}},[r._v("实例化绘制"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial8-depth/",target:"_blank",rel:"noopener noreferrer"}},[r._v("深度缓冲区"),e("OutboundLink")],1)]),r._v(" "),e("li",[r._v("✅ "),e("a",{attrs:{href:"https://doodlewind.github.io/learn-wgpu-cn/beginner/tutorial9-models/",target:"_blank",rel:"noopener noreferrer"}},[r._v("加载模型"),e("OutboundLink")],1)])])]),r._v(" "),e("li",[r._v("进阶篇\n"),e("ul",[e("li",[r._v("🚧 处理光照效果")]),r._v(" "),e("li",[r._v("🚧 法线贴图")]),r._v(" "),e("li",[r._v("🚧 更好的相机")]),r._v(" "),e("li",[r._v("🚧 基于 Wgpu 和 Rayon 的多线程")])])])]),r._v(" "),e("h2",{attrs:{id:"什么是-wgpu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-wgpu"}},[r._v("#")]),r._v(" 什么是 Wgpu？")]),r._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/gfx-rs/wgpu",target:"_blank",rel:"noopener noreferrer"}},[r._v("Wgpu"),e("OutboundLink")],1),r._v(" 是 "),e("a",{attrs:{href:"https://gpuweb.github.io/gpuweb/",target:"_blank",rel:"noopener noreferrer"}},[r._v("WebGPU API 标准"),e("OutboundLink")],1),r._v("的 Rust 实现。WebGPU 是由 W3C GPU for the Web 社区小组所发布的规范，目标是让网页代码能安全可靠地访问 GPU 功能。其实现方式借鉴了 Vulkan API，会翻译到宿主硬件所用的各式 API（如 DirectX、Metal、Vulkan 等）上执行。")]),r._v(" "),e("p",[r._v("Wgpu 仍在开发中，故本文档中部分内容可能发生变化。")]),r._v(" "),e("h2",{attrs:{id:"为什么使用-rust"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用-rust"}},[r._v("#")]),r._v(" 为什么使用 Rust？")]),r._v(" "),e("p",[r._v("Wgpu 实际上已经提供了 C 语言绑定，你既可以写 C/C++ 代码来使用它，也可以使用其他能与 C 互通的语言。尽管如此，wgpu 本身是用 Rust 实现的。因此它的 Rust 绑定较为方便，能帮助你减少编码时的阻碍。除此之外，笔者也一直在享受编写 Rust 的乐趣。")]),r._v(" "),e("p",[r._v("在学习本教程之前，你应该已经熟悉了 Rust，因为笔者不会对 Rust 的语法进行过多的详细介绍。如果你对 Rust 还不太熟悉，可以回顾一下 "),e("a",{attrs:{href:"https://www.rust-lang.org/learn",target:"_blank",rel:"noopener noreferrer"}},[r._v("Rust 教程"),e("OutboundLink")],1),r._v("。另外你也应该熟悉 "),e("a",{attrs:{href:"https://doc.rust-lang.org/cargo",target:"_blank",rel:"noopener noreferrer"}},[r._v("Cargo"),e("OutboundLink")],1),r._v("。")]),r._v(" "),e("p",[r._v("笔者自己在利用这个项目学习 wgpu，所以也可能会错过一些重要的细节，有些地方也可能解释得不够好。为此笔者始终愿意接受建设性的反馈。")]),r._v(" "),e("h2",{attrs:{id:"贡献与支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贡献与支持"}},[r._v("#")]),r._v(" 贡献与支持")]),r._v(" "),e("ul",[e("li",[r._v("原版 "),e("a",{attrs:{href:"https://github.com/sotrh/learn-wgpu",target:"_blank",rel:"noopener noreferrer"}},[r._v("GitHub 仓库"),e("OutboundLink")],1),r._v("接受勘误性（如修复错别字、错误信息和其他不一致之处）的 PR。")]),r._v(" "),e("li",[r._v("由于 wgpu 的 API 变化很快，因此原版仓库不接受任何用于展示 demo 的 PR。")]),r._v(" "),e("li",[r._v("如果想直接支持原作者，请查看 "),e("a",{attrs:{href:"https://www.patreon.com/sotrh",target:"_blank",rel:"noopener noreferrer"}},[r._v("patreon"),e("OutboundLink")],1),r._v("！")])]),r._v(" "),e("h2",{attrs:{id:"特别致谢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特别致谢"}},[r._v("#")]),r._v(" 特别致谢")]),r._v(" "),e("p",[e("em",[r._v("排名不分先后")])]),r._v(" "),e("ul",[e("li",[r._v("Zeh Fernando")]),r._v(" "),e("li",[r._v("The toddling chaos")]),r._v(" "),e("li",[r._v("Jan Šipr")]),r._v(" "),e("li",[r._v("Bernard Llanos")]),r._v(" "),e("li",[r._v("Aron Granberg")]),r._v(" "),e("li",[r._v("Ian Gowen")]),r._v(" "),e("li",[r._v("Paul E Hansen")]),r._v(" "),e("li",[r._v("Lennart")]),r._v(" "),e("li",[r._v("Gunstein Vatnar")]),r._v(" "),e("li",[r._v("David Laban")])])])}),[],!1,null,null,null);t.default=a.exports}}]);